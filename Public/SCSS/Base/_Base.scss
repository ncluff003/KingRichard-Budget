@use '../../../Public/SCSS/Utilities/Mixins' as *;
@use '../../../Public/SCSS/Utilities/Variables' as *;

/*
I was thinking of iterating through the objects that were created.
    //////////////////////////////////
    /// To Do List:

    MUSTDO :  ** TOP PRIORITY **
    
    
    //////////////////////////////////
    /// Glitches To Fix

    GLITCH : Budget Navigation Button Needs To Stay WITH The Navigation Itself.


    //////////////////////////////////
    /// Adjustments To Make

    ADJUST : Re-Do Enter Transaction Form To Accommodate For Expense Timing.  This Includes The JavaScript Along With The Styling AND HTML.
    ADJUST : Re-Do Enter Transaction Form To Accommodate For Expense AND Savings Marking Transaction Item As Need Or Surplus.  This Includes The JavaScript Along With The Styling AND HTML.
    ADJUST : Right now, things work fairly well with regards to the budget and such, but the main thing to adjust is the structure of the code.  Especially regarding the fact that much of the time I use similar structured items in both the budget creation form, as well as throughout the budget.  So, I would love to be able to review each part of the creation phase of the budget along with the Budget Dashboard AND each other part of the budget that has similar structures to help them to actually fit well within the JavaScript.  It is making some aspects of the structuring pugs much more difficult then I feel it should be.
    ADJUST : This one goes right in hand with the one above.  The code needs to be further deconstructed so that only the necessary parts are nested inside one another.  No more having the master flex container everywhere, for example.

    //////////////////////////////////
    /// Features To Implement

    FEATURE : 

*/

//////////////////////////////////
///  Foundation Settings

*,
*::before,
*:after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  // This defines what 1rem should be
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  box-sizing: border-box;
  @include SizingItem(relative, 100%, 100vw);
  background-color: $colorOffWhite;
  overflow-x: hidden;
}

.closed {
  display: none !important;
}
.open {
  display: flex;
  &-grid {
    display: grid;
  }
  &-navigation {
    @extend .open;
    opacity: 1;
    position: sticky;
    top: 0;
    z-index: 10;
  }
}

.extend-enter-transaction {
  margin-bottom: 7rem;
  overflow-y: visible;
}

.extend-transaction-plan {
  @include Taller(9rem, 2);
  .form__row--transaction {
    margin-bottom: 9rem;
  }
}

.positive-investment {
  border-color: $secondaryColor;
  .container--extra-small__margin-left-and-right__header {
    background-color: $secondaryColor;
  }
  .container--extra-small__margin-left-and-right__content__column {
    .investment-explanatory-information {
      border-bottom-color: $secondaryColor;
    }
  }
}
.neutral-investment {
  border-color: $primaryColor;
  .container--extra-small__margin-left-and-right__header {
    background-color: $primaryColor;
  }
  .container--extra-small__margin-left-and-right__content__column {
    .investment-explanatory-information {
      border-bottom-color: $primaryColor;
    }
  }
}
.negative-investment {
  border-color: $colorError;
  .container--extra-small__margin-left-and-right__header {
    background-color: $colorError;
  }
  .container--extra-small__margin-left-and-right__content__column {
    .investment-explanatory-information {
      border-bottom-color: $colorError;
    }
  }
}

.raised {
  transform: translate(0, -1.6rem);
  & ~ label {
    transform: translate(1rem, -1.6rem);
  }
}

.lowered {
  transform: translate(0, 1.5rem);
  & + label {
    top: 50%;
    transform: translate(0, 0);
    -moz-transform: translateY(0);
  }
}

.quarters {
  height: 35%;
  & + .form__section--early-income-view {
    height: 30%;
    .form__section--early-income-view__income-view,
    .form__section--early-income-view__income-view--purple {
      width: 25%;
    }
  }
}
