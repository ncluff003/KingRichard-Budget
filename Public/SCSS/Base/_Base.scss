@use "../../../Public/SCSS/Utilities/Mixins" as *;
@use "../../../Public/SCSS/Utilities/Variables" as *;

/*
I was thinking of iterating through the objects that were created.
    //////////////////////////////////
    /// To Do List:

    MUSTDO : Finish JavaScript lessons & ALL projects inside the course.  ** TOP PRIORITY **
    MUSTDO : Finish Node.js lessons & ALL projects inside the course.  ** TOP PRIORITY **
    MUSTDO : Implement functionality of my signup form so it does the following: 
      - Validates the input given against the required input.
      - Moves on to the next question if it is not the last, otherwise, submit the form.
      - Make sure it gives the user an error if it is essential.
    MUSTDO : Implement a way for the Login Form & Signup form to show & hide the password.
    MUSTDO : Understand MVC architecture so I can implement that in both my personal website & budget.  Then, I can start with that file architecture from the get go.
    MUSTDO : After Login is validated, I want the person's profile page to load.
    MUSTDO : After a Signup is completed & validated, i want a profile page to be created AND loaded with that user's information.
    
    
    
    //////////////////////////////////
    /// Glitches To Fix

    GLITCH : Form Placeholder Does Not Show In FireFox.
    GLITCH : My Custom Font Purely Me Does Not Get Used In My Site Outside Of Dissenter & My Computer.


    //////////////////////////////////
    /// Adjustments To Make

    ADJUST : Remove Arrow Functions from Methods.
    ADJUST : Refactor Code to make it so functions / methods only use up to 5 parameters max.
    ADJUST : Do not worry about the length of the code if you are chaining methods or something very similar.


    //////////////////////////////////
    /// Features To Implement

    FEATURE : Get form to be fully functional and send an email containing the message to my personal email.  Do so without doing something insecure.
    FEATURE : Allow keyboard arrows to control the 'More About Me' section.
    FEATURE : Allow for the user to go to the end or the beginning after getting to the end of the items. ( All that is left is the 'More About Me' section.

*/

//////////////////////////////////
///  Foundation Settings

*,
*::before,
*:after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  // This defines what 1rem should be
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  box-sizing: border-box;
  @include SizingItem(relative, 100%, 100vw);
  background-color: $colorDarkestGrey;
  overflow-x: hidden;
}

////////////////////////////////////////////////
//  Vertical Flex Container

.master-flex-container {
  background-color: $colorDarkestGrey;

  ////////////////////////////////////////////////
  //  Navigation

  .master-grid-container {
    .king-richard-logo {
      @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
      opacity: 0.5;
    }
    .king-richard-main-text {
      align-self: center;
      justify-self: flex-start;
      transform: translate(-4rem, 0);
      opacity: 0.5;
    }
    .king-richard-sub-text {
      align-self: center;
      justify-self: flex-end;
      transform: translate(-10.25rem, -1rem);
      opacity: 0.5;
    }
    .typing-text-container {
      @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
      padding: 0 5rem;
      // background-color: rgba($colorSilver, .25); // I intend on removing this background color for consumers.  I need to know where the limits are.

      .typing-text--cursor {
        @include SizingItem(relative, 50%, 0.8rem);
        background-color: $secondaryColor;
        margin-left: 1rem;
        animation: blink 0.75s step-end infinite;
      }
    }

    .introduction-button-container {
      @include SizeAndPositioning(relative, 100%, 100%, flex, space-evenly, center, 0, 0, 0);
    }

    .about-me-container {
      @include SizeAndPositioning(relative, 100%, 100%, flex, space-evenly, center, 0, 0, 0);
      flex-direction: column;

      &__option-slider {
        @include SizeAndPositioning(relative, 75%, 100%, flex, stretch, center, 0, 0, 0);
        flex-direction: row;
        overflow: hidden;

        &--option {
          @include SizeAndPositioning(absolute, 100%, 100%, flex, center, center, 0, 0, 0);
          top: 0;
          .about-typing-text-container {
            @include SizeAndPositioning(relative, 30.14%, 100%, flex, center, center, 0, 0, 0);
            padding: 0 5rem;
            .about-typing-text--cursor {
              @include SizingItem(relative, 70%, 0.8rem);
              background-color: $secondaryColor;
              margin-left: 1rem;
              animation: blink 0.75s step-end infinite;
            }
          }
          .about-me-video {
            @include SizingItem(relative, 100%, 60%);
          }

          &--2 {
            transform: translateX(100%);
          }

          &--1,
          &--2 {
            transition: transform 1s;
          }
        }
      }
      &__option-navigation {
        @include SizeAndPositioning(relative, 25%, 100%, flex, center, flex-start, 0, 0, 0);
        padding: 3rem;

        &__dot {
          @include SizingItem(relative, 2rem, 2rem);
          border: none;
          border-radius: 50%;
          background-color: rgba($colorGrey, 0.5);
          margin: 0 1rem;

          &:hover {
            cursor: pointer;
            background-color: rgba($colorDarkGrey, 0.8);
          }

          &--active {
            background-color: $colorDarkerGrey;
            &:hover {
              background-color: $colorDarkerGrey;
            }
          }
        }
      }
    }

    .section-header {
      @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
    }

    .showcase-grid {
      @include SizeAndPositioning(relative, 100%, 100%, grid, center, center, 0, 0, 0);
      @include gridLayout(100%, 100%, 1fr, 1fr, 0, 0);
      @include gridPlacement(1, 1, 1, 1);
      overflow: hidden;
      justify-items: center;

      .skill-card {
        // @include SizeAndPositioning(absolute, 60%, 26rem, flex, space-evenly, center, 0, 0, 0);
        @include SizeAndPositioning(relative, 60%, 24rem, flex, center, center, 0, 0, 0);
        right: 0;
        flex-direction: column;
        padding: 2rem;
        border-radius: 1rem;
        background-color: rgba($colorLighterGrey, 0.8);
        opacity: 0.5;
        margin: 0 2rem;

        transition: opacity 1s, transform 1s;

        &--current {
          justify-self: center;
          transform: translateY(-8%);
        }

        .skill-image-container {
          @include SizeAndPositioning(relative, 75%, 100%, flex, center, center, 0, 0, 0);
          margin-bottom: 2rem;
          background-color: $secondaryColor;
        }

        .skill-title-container {
          @include SizeAndPositioning(relative, 25%, 100%, flex, center, center, 0, 0, 0);
        }

        &:hover,
        &:active {
          cursor: pointer;
          opacity: 1;
          left: 0;
        }
      }

      .project-card {
        @include SizeAndPositioning(relative, 80%, 60%, flex, center, center, 0, 0, 0);
        background-color: rgba($colorDarkGrey, 0.25);
        padding: 4rem;

        transition: opacity 1s, transform 1s;

        &-cover {
          @include SizeAndPositioning(relative, 100%, 45%, flex, space-evenly, center, 0, 0, 0);
          flex-direction: column;

          &-image-container {
            @include SizeAndPositioning(relative, 75%, 100%, flex, center, center, 0, 0, 0);
            background-color: rgba($colorOffWhite, 0.25);
            img {
              @include SizingItem(relative, 100%, 100%);
              object-fit: cover;
            }
          }

          &-title-container {
            @include SizeAndPositioning(relative, 25%, 100%, flex, center, center, 0, 0, 0);
          }
        }
        &-content {
          @include SizeAndPositioning(relative, 100%, 55%, flex, space-evenly, center, 0, 0, 0);
          flex-direction: column;
          padding-left: 4rem;
          &-description-container {
            @include SizeAndPositioning(relative, 75%, 100%, flex, center, center, 0, 0, 0);
            background-color: rgba($colorOffWhite, 0.5);
          }
          &-link-container {
            @include SizeAndPositioning(relative, 25%, 100%, flex, space-evenly, center, 0, 0, 0);
            &--link {
              @include SizeAndPositioning(relative, 60%, 40%, flex, center, center, 0, 0, 0);
              border: 0.2rem groove rgba($secondaryColor, 0.8);
              border-radius: 5rem;
              transform: translateY(1rem);
              background-color: transparent;
              &:hover {
                cursor: pointer;
                background-color: $secondaryColor;
                transition: background-color 0.5s, color 0.5s;
              }
            }
          }
        }
      }
    }

    .dots {
      @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
      &__dot {
        @include SizingItem(relative, 2rem, 2rem);
        background-color: rgba($colorLighterGrey, 0.8);
        border: none;
        border-radius: 50%;
        margin: 0 2rem;

        &--active {
          background-color: $colorDarkerGrey;
        }
      }
    }

    .project-count {
      @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
    }
  }
}
